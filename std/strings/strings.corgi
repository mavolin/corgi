// Trunc truncates the stringified version of val after the at-th rune.
//
// If at is negative, Trunc will truncate the at-th rune starting from the last
// rune.
//
// If |at| is smaller than the rune length of val, then all of val will be
// printed.
//
// Examples
//
//  +Trunc(val="abcdef", at=3) -> abc
//  +Trunc(val="abcdef", at=-3) -> def
mixin Trunc(val any, at int)

// TruncB is the same as Trunc, but instead of accepting a val param, it
// truncates the text written to its _ block.
//
// Users are advised to only place text inside the body, as TruncB might
// otherwise cut of elements, leading to missing closing tags and therefore
// invalid HTML.
mixin TruncB(at int)

// Abbrev truncates the stringified version of val according to the rules of
// trunc and then appends replacement, if it truncated anything.
//
// By default, replacement is U+2026 Horizontal Ellipsis.
mixin Abbrev(val any, at int, replacement = "â€¦")

// Initials prints the first letter of each word in the stringified version of
// val.
//
// If max is set to a number higher than 0, Initials will print at most max
// initials.
//
// If upper is set to true, the initials will be uppercased before printing.
//
// Similarly, if lower is set to true, the initials will be lowercase.
//
// If both a false, the initials will be printed as is, and if both are true,
// upper takes precedence.
mixin Initials(val any, max=0, upper = false, lower = false)

// Wrap wraps the stringified version of val by printing `with` unescaped every
// `after` runes.
mixin Wrap(val any, after int, with="<br>")

// RandText produces a string of length runes generated from the passed charset.
//
// You may specify character ranges such as a-z, or just literal characters.
//
// If charset is set to an empty or invalid string, RandText returns with an
// error from the generated function.
//
// If length is negative, RandText prints nothing.
//
// The generated text is cryptographically secure, utilizing crypto/rand.
mixin RandText(charset="a-zA-Z", length int)