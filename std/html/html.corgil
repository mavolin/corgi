import __corgi_std_woof "github.com/mavolin/corgi/woof"

//// Element writes a new element with the passed name.
////
//// It's _ block can be used to fill the body of the element and set its
//// attributes.
//mixin Element(name string, void=false)
//
//// Attr writes an attribute to the element it is called in.
////
//// It must be placed before writing to the body of the element.
////
//// If val is a bool, Attr will write only the name for val == true, and nothing
//// for val == false, just like any other boolean attribute.
////
//// Use a string if you require true or false to spelled out, like for the
//// aria-hidden attribute.
//mixin Attr(name string, val any)

// Breaked replaces each newline in the stringified version of val with a <br>
// and prints it.
//
// The optional maxAdjacent arg allows to limit the number of adjacent <br>s,
// to an arbitrary number.
// This means groups of more than maxAdjacent consecutive newlines are replaced
// with only maxAdjacent * "<br>".
//
// Setting maxAdjacent to 0 effectively removes all newlines from val.
//
// A negative value is the default and causes all <br>s to be printed.
mixin Breaked(val any, maxAdjacent=-1)
  - s, err := __corgi_std_woof.Stringify(val)
  if err != nil
    return err

  - var adjacent int
  for _, ln := range strings.Split(s, "\n")
    if ln == ""
      - adjacent++
      if maxAdjacent < 0 || adjacent <= maxAdjacent
        br
      - continue

    > #{ln}
    if maxAdjacent > 0
      br
    - adjacent = 1